version: 2.1
executors:
  dotnet:
    docker:
      - image: microsoft/dotnet:latest
      - image: postgres:latest
        environment:
          LANG: ja_JP.UTF-8
          POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --locale=C'
          POSTGRES_USER: 'postgres'
          POSTGRES_PASSWORD: 'postgres'
  dind:
    docker:
      - image: docker:latest
jobs:
  test:
    executor: dotnet
    environment:
      - ConnectionStrings__Root: 'Server=127.0.0.1;User ID=postgres;Password=postgres;Port=5432;'
      - Directory: './.migration'
    steps:
      - checkout
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: build
          command: dotnet publish Deploys.Db -c Release -o out
      - run:
          name: cd
          command: cd Deploys.Db/out
      - run:
          name: run
          command: dotnet Deploys.Db.dll
          background: true
      - run:
          name: Wait for db
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - run:
          name: Wait for app
          command: dockerize -wait tcp://127.0.0.1:80 -timeout 1m
      - run:
          name: migration
          command: curl -X POST 127.0.0.1:80/migrations -H "Content-Length:0"
  publish:
    executor: dind
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: docker build -t tampopos/boardless-deploys-db:${CIRCLE_TAG} .
      - run:
          command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - run:
          command: docker push tampopos/boardless-deploys-db:${CIRCLE_TAG}
workflows:
  version: 2
  build:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - publish:
          context: docker-publish
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
